2024-09-20T11:32:40.401324-0300 INFO Chamando função pipeline com args:
(PosixPath('/home/rggn/Desktop/jornada/etl-pandas-json-parquet/data'), ['csv', 'parquet'])
E kwargs:
{} log.py
2024-09-20T11:32:40.401451-0300 INFO Chamando função extrair_dados com args:
(PosixPath('/home/rggn/Desktop/jornada/etl-pandas-json-parquet/data'),)
E kwargs:
{} log.py
2024-09-20T11:32:40.407937-0300 INFO Função extrair_dados retornou:
            Produto    Categoria  Quantidade  Venda        Data
0    Notebook Gamer  Eletrônicos           2   1500  2023-01-17
1     Mouse Sem Fio  Eletrônicos          14     30  2023-01-17
2  Teclado Mecânico  Eletrônicos           2    100  2023-01-17
3    Notebook Gamer  Eletrônicos           7   1500  2023-01-16
4     Mouse Sem Fio  Eletrônicos          10     30  2023-01-16
5  Teclado Mecânico  Eletrônicos           3    100  2023-01-16
6    Notebook Gamer  Eletrônicos           3   1500  2023-01-15
7     Mouse Sem Fio  Eletrônicos          10     30  2023-01-15
8  Teclado Mecânico  Eletrônicos           5    100  2023-01-15 log.py
2024-09-20T11:32:40.408041-0300 INFO Função extrair_dados executada em 0.0066 segundos timer.py
2024-09-20T11:32:40.409723-0300 INFO Chamando função transformar_dados com args:
(            Produto    Categoria  Quantidade  Venda        Data
0    Notebook Gamer  Eletrônicos           2   1500  2023-01-17
1     Mouse Sem Fio  Eletrônicos          14     30  2023-01-17
2  Teclado Mecânico  Eletrônicos           2    100  2023-01-17
3    Notebook Gamer  Eletrônicos           7   1500  2023-01-16
4     Mouse Sem Fio  Eletrônicos          10     30  2023-01-16
5  Teclado Mecânico  Eletrônicos           3    100  2023-01-16
6    Notebook Gamer  Eletrônicos           3   1500  2023-01-15
7     Mouse Sem Fio  Eletrônicos          10     30  2023-01-15
8  Teclado Mecânico  Eletrônicos           5    100  2023-01-15,)
E kwargs:
{} log.py
2024-09-20T11:32:40.417052-0300 INFO O DataFrame gerado é válido com schema:
Produto               object
Categoria             object
Quantidade             int64
Venda                  int64
Data          datetime64[ns]
dtype: object schema.py
2024-09-20T11:32:40.419648-0300 INFO Função transformar_dados retornou:
            Produto    Categoria  Quantidade  Venda       Data  Total
0    Notebook Gamer  Eletrônicos           2   1500 2023-01-17   3000
1     Mouse Sem Fio  Eletrônicos          14     30 2023-01-17    420
2  Teclado Mecânico  Eletrônicos           2    100 2023-01-17    200
3    Notebook Gamer  Eletrônicos           7   1500 2023-01-16  10500
4     Mouse Sem Fio  Eletrônicos          10     30 2023-01-16    300
5  Teclado Mecânico  Eletrônicos           3    100 2023-01-16    300
6    Notebook Gamer  Eletrônicos           3   1500 2023-01-15   4500
7     Mouse Sem Fio  Eletrônicos          10     30 2023-01-15    300
8  Teclado Mecânico  Eletrônicos           5    100 2023-01-15    500 log.py
2024-09-20T11:32:40.419758-0300 INFO Função transformar_dados executada em 0.0117 segundos timer.py
2024-09-20T11:32:40.421608-0300 INFO Chamando função carregar_dados com args:
(            Produto    Categoria  Quantidade  Venda       Data  Total
0    Notebook Gamer  Eletrônicos           2   1500 2023-01-17   3000
1     Mouse Sem Fio  Eletrônicos          14     30 2023-01-17    420
2  Teclado Mecânico  Eletrônicos           2    100 2023-01-17    200
3    Notebook Gamer  Eletrônicos           7   1500 2023-01-16  10500
4     Mouse Sem Fio  Eletrônicos          10     30 2023-01-16    300
5  Teclado Mecânico  Eletrônicos           3    100 2023-01-16    300
6    Notebook Gamer  Eletrônicos           3   1500 2023-01-15   4500
7     Mouse Sem Fio  Eletrônicos          10     30 2023-01-15    300
8  Teclado Mecânico  Eletrônicos           5    100 2023-01-15    500, ['csv', 'parquet'])
E kwargs:
{} log.py
2024-09-20T11:32:40.434339-0300 INFO Função carregar_dados retornou:
None log.py
2024-09-20T11:32:40.434459-0300 INFO Função carregar_dados executada em 0.0147 segundos timer.py
2024-09-20T11:32:40.434533-0300 INFO Função pipeline retornou:
None log.py
2024-09-20T11:32:40.434574-0300 INFO Função pipeline executada em 0.0333 segundos timer.py
2024-09-20T11:40:21.803942-0300 INFO Chamando função pipeline com args:
(PosixPath('/home/rggn/Desktop/jornada/etl-pandas-json-parquet/data'), ['csv', 'parquet'])
E kwargs:
{} log.py
2024-09-20T11:40:21.804065-0300 INFO Chamando função extrair_dados com args:
(PosixPath('/home/rggn/Desktop/jornada/etl-pandas-json-parquet/data'),)
E kwargs:
{} log.py
2024-09-20T11:40:21.810462-0300 INFO Função extrair_dados retornou:
            Produto    Categoria  Quantidade  Venda        Data
0    Notebook Gamer  Eletrônicos           2   1500  2023-01-17
1     Mouse Sem Fio  Eletrônicos          14     30  2023-01-17
2  Teclado Mecânico  Eletrônicos           2    100  2023-01-17
3    Notebook Gamer  Eletrônicos           7   1500  2023-01-16
4     Mouse Sem Fio  Eletrônicos          10     30  2023-01-16
5  Teclado Mecânico  Eletrônicos           3    100  2023-01-16
6    Notebook Gamer  Eletrônicos           3   1500  2023-01-15
7     Mouse Sem Fio  Eletrônicos          10     30  2023-01-15
8  Teclado Mecânico  Eletrônicos           5    100  2023-01-15 log.py
2024-09-20T11:40:21.810567-0300 INFO Função extrair_dados executada em 0.0065 segundos timer.py
2024-09-20T11:40:21.812393-0300 INFO Chamando função transformar_dados com args:
(            Produto    Categoria  Quantidade  Venda        Data
0    Notebook Gamer  Eletrônicos           2   1500  2023-01-17
1     Mouse Sem Fio  Eletrônicos          14     30  2023-01-17
2  Teclado Mecânico  Eletrônicos           2    100  2023-01-17
3    Notebook Gamer  Eletrônicos           7   1500  2023-01-16
4     Mouse Sem Fio  Eletrônicos          10     30  2023-01-16
5  Teclado Mecânico  Eletrônicos           3    100  2023-01-16
6    Notebook Gamer  Eletrônicos           3   1500  2023-01-15
7     Mouse Sem Fio  Eletrônicos          10     30  2023-01-15
8  Teclado Mecânico  Eletrônicos           5    100  2023-01-15,)
E kwargs:
{} log.py
2024-09-20T11:40:21.820317-0300 INFO O DataFrame gerado é válido com schema:
Produto               object
Categoria             object
Quantidade             int64
Venda                  int64
Data          datetime64[ns]
dtype: object schema.py
2024-09-20T11:40:21.822665-0300 INFO Função transformar_dados retornou:
            Produto    Categoria  Quantidade  Venda       Data  Total
0    Notebook Gamer  Eletrônicos           2   1500 2023-01-17   3000
1     Mouse Sem Fio  Eletrônicos          14     30 2023-01-17    420
2  Teclado Mecânico  Eletrônicos           2    100 2023-01-17    200
3    Notebook Gamer  Eletrônicos           7   1500 2023-01-16  10500
4     Mouse Sem Fio  Eletrônicos          10     30 2023-01-16    300
5  Teclado Mecânico  Eletrônicos           3    100 2023-01-16    300
6    Notebook Gamer  Eletrônicos           3   1500 2023-01-15   4500
7     Mouse Sem Fio  Eletrônicos          10     30 2023-01-15    300
8  Teclado Mecânico  Eletrônicos           5    100 2023-01-15    500 log.py
2024-09-20T11:40:21.822767-0300 INFO Função transformar_dados executada em 0.0122 segundos timer.py
2024-09-20T11:40:21.824648-0300 INFO Chamando função carregar_dados com args:
(            Produto    Categoria  Quantidade  Venda       Data  Total
0    Notebook Gamer  Eletrônicos           2   1500 2023-01-17   3000
1     Mouse Sem Fio  Eletrônicos          14     30 2023-01-17    420
2  Teclado Mecânico  Eletrônicos           2    100 2023-01-17    200
3    Notebook Gamer  Eletrônicos           7   1500 2023-01-16  10500
4     Mouse Sem Fio  Eletrônicos          10     30 2023-01-16    300
5  Teclado Mecânico  Eletrônicos           3    100 2023-01-16    300
6    Notebook Gamer  Eletrônicos           3   1500 2023-01-15   4500
7     Mouse Sem Fio  Eletrônicos          10     30 2023-01-15    300
8  Teclado Mecânico  Eletrônicos           5    100 2023-01-15    500, ['csv', 'parquet'])
E kwargs:
{} log.py
2024-09-20T11:40:21.837633-0300 INFO Função carregar_dados retornou:
None log.py
2024-09-20T11:40:21.837812-0300 INFO Função carregar_dados executada em 0.0150 segundos timer.py
2024-09-20T11:40:21.837872-0300 INFO Função pipeline retornou:
None log.py
2024-09-20T11:40:21.837923-0300 INFO Função pipeline executada em 0.0340 segundos timer.py
